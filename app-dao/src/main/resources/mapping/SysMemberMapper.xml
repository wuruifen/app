<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.app.dao.SysMemberMapper">
  
  <resultMap id="BaseResultMap" type="com.hao.app.pojo.SysMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="imgs" jdbcType="VARCHAR" property="imgs" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="show_name" jdbcType="VARCHAR" property="showName" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
    <result column="roleIntor" jdbcType="VARCHAR" property="roleIntor" />
  </resultMap>
 
  <select id="queryByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, imgs, valid, pwd, show_name, role_id, phone, email
    from sys_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="queryMemberByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, imgs, valid, pwd, show_name, role_id, phone, email
    from sys_member
    where name = #{name,jdbcType=VARCHAR}
    limit 1
  </select>
  
  <insert id="insert" parameterType="com.hao.app.pojo.SysMember">
    insert into sys_member (
    	name, valid, pwd, show_name, role_id, phone, email)
    values (
    	#{name,jdbcType=VARCHAR}, 
    	#{valid,jdbcType=INTEGER}, 
      	#{pwd,jdbcType=VARCHAR}, 
      	#{showName,jdbcType=VARCHAR}, 
      	#{roleId,jdbcType=INTEGER}, 
      	#{phone,jdbcType=VARCHAR}, 
      	#{email,jdbcType=VARCHAR})
  </insert>
  
 
  <select id="queryMembersCount" resultType="java.lang.Integer">
    select count(*) from sys_member
  </select>
  
 
  <select id="queryMembersPageList" parameterType="com.hao.app.commons.entity.param.QueryParam" resultMap="BaseResultMap">
    select 
    	m.id, m.name, m.imgs, m.valid, m.pwd, m.show_name, m.role_id, m.phone, m.email,
    	r.name as roleName,r.intro as roleIntor
    from sys_member m
    left join sys_role r on r.id = m.role_id
   	order by m.valid
   	limit ${pageStart},${pageLimit}
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.hao.app.pojo.SysMember">
    update sys_member
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="showName != null">
        show_name = #{showName,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

	<update id="updateMemberValid">
		update sys_member set valid = #{valid} where id = #{id}
	</update>

	<update id="updateMemberImgs">
		update sys_member set imgs = #{imgs} where id = #{id}
	</update>
  
</mapper>